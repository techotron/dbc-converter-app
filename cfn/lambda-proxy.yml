AWSTemplateFormatVersion: "2010-09-09"

Description: Lambda proxy to process the sqs queue

Parameters:
  appPackageS3Bucket:
    Description: S3 Bucket for the packaged app
    Type: String

  appPackageS3Key:
    Description: S3 Key for the packaged app
    Type: String

Resources:
  ProcessSqsFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref appPackageS3Bucket
        S3Key: !Ref appPackageS3Key
      Description: Process E-mail
      FunctionName:  !Join [ "-", [ !Ref "AWS::StackName", "00-ProcessSqsFunction" ]]
      Handler: process-queue.check_queue
      Role: !GetAtt LambdaExecutionRole.Arn
      MemorySize: 128
      Runtime: python3.7
      Timeout: 10
      Environment:
        Variables:
          SRCregion: !Ref "AWS::Region"

  LambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: /
        Policies:
          - PolicyName: dbc-converter-lambda-proxy-log-policy
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: "*"
          - PolicyName: dbc-converter-lambda-proxy-resource-policy
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                     - s3:*
                     - dynamodb:*
                     - sqs:*
                  Resource: "*"

  SqsEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !ImportValue "dbcConverterQueue-ARN"
      FunctionName: !GetAtt ProcessSqsFunction.Arn
